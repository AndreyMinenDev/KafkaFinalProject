services:
 zookeeper-a:
   image: confluentinc/cp-zookeeper:7.4.4
   restart: always
   container_name: zookeeper-a
   hostname: zookeeper-a
   volumes:
     - ./jaas/zookeeper_jaas.conf:/etc/zookeeper/secrets/zookeeper_jaas.conf
   environment:
     ZOOKEEPER_SERVER_ID: 1
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
     ZOOKEEPER_INIT_LIMIT: 5
     ZOOKEEPER_SYNC_LIMIT: 2
     ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
     ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
     ZOOKEEPER_SASL_ENABLED: "true"
     KAFKA_OPTS:
       -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper_jaas.conf
       -Dquorum.cnxn.threads.size=20
       -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
       -Dzookeeper.allowSaslFailedClients=false
       -DjaasLoginRenew=3600000     
   networks:
     - kafka_net

 kafka-a-1:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-a-1
   hostname: kafka-a-1
   depends_on:
     - zookeeper-a
   ports:
     - "9094:9094"
     - "9991:9991"
   volumes:
     - data-kafka-a-1:/var/lib/kafka/data
     - ./jaas:/etc/kafka/jaas
     - ./clusterA:/etc/kafka/secrets
     - ./scripts/clusterA:/etc/kafka/scripts_init
   environment:
     KAFKA_BROKER_ID: 0
     KAFKA_ZOOKEEPER_CONNECT: zookeeper-a:2181
     KAFKA_JMX_PORT: 9991
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-a-1:9092,SASL_SSL://kafka-a-1:9093,EXTERNAL://localhost:9094
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_ZOOKEEPER_SET_ACL: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_jaas.conf"
#     KAFKA_SSL_KEYSTORE_FILENAME: clusterA.keystore.jks
     KAFKA_SSL_KEYSTORE_FILENAME: keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: creds_keystore
     KAFKA_SSL_KEY_CREDENTIALS: creds_keystore
#     KAFKA_SSL_TRUSTSTORE_FILENAME: clusterA.truststore.jks
     KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds_truststore
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net

 kafka-a-2:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-a-2
   hostname: kafka-a-2
   depends_on:
     - zookeeper-a
   ports:
     - "9095:9095"
     - "9992:9992"
   volumes:
     - data-kafka-a-2:/var/lib/kafka/data
     - ./jaas:/etc/kafka/jaas
     - ./clusterA:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper-a:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_JMX_PORT: 9992
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9095
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-a-2:9092,SASL_SSL://kafka-a-2:9093,EXTERNAL://localhost:9095
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_jaas.conf"
#     KAFKA_SSL_KEYSTORE_FILENAME: clusterA.keystore.jks
     KAFKA_SSL_KEYSTORE_FILENAME: keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: creds_keystore
     KAFKA_SSL_KEY_CREDENTIALS: creds_keystore
#     KAFKA_SSL_TRUSTSTORE_FILENAME: clusterA.truststore.jks
     KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds_truststore
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net

 kafka-a-3:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-a-3
   hostname: kafka-a-3
   depends_on:
     - zookeeper-a
   ports:
     - "9096:9096"
     - "9993:9993"
   volumes:
     - data-kafka-a-3:/var/lib/kafka/data
     - ./jaas:/etc/kafka/jaas
     - ./clusterA:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 2
     KAFKA_ZOOKEEPER_CONNECT: zookeeper-a:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_JMX_PORT: 9993
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9096
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-a-3:9092,SASL_SSL://kafka-a-3:9093,EXTERNAL://localhost:9096
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_jaas.conf"
#     KAFKA_SSL_KEYSTORE_FILENAME: clusterA.keystore.jks
     KAFKA_SSL_KEYSTORE_FILENAME: keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: creds_keystore
     KAFKA_SSL_KEY_CREDENTIALS: creds_keystore
#     KAFKA_SSL_TRUSTSTORE_FILENAME: clusterA.truststore.jks
     KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds_truststore
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net

 zookeeper-b:
   image: confluentinc/cp-zookeeper:7.4.4
   restart: always
   container_name: zookeeper-b
   hostname: zookeeper-b
   volumes:
     - ./jaas/zookeeper_jaas.conf:/etc/zookeeper/secrets/zookeeper_jaas.conf
   environment:
     ZOOKEEPER_SERVER_ID: 1
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
     ZOOKEEPER_INIT_LIMIT: 5
     ZOOKEEPER_SYNC_LIMIT: 2
     ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
     ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
     ZOOKEEPER_SASL_ENABLED: "true"
     KAFKA_OPTS:
       -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper_jaas.conf
       -Dquorum.cnxn.threads.size=20
       -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
       -Dzookeeper.allowSaslFailedClients=false
       -DjaasLoginRenew=3600000
   networks:
     - kafka_net

 kafka-b-1:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-b-1
   hostname: kafka-b-1
   depends_on:
     -  zookeeper-b
   ports:
     - "9097:9097"
     - "9994:9994"
   volumes:
     - data-kafka-b-1:/var/lib/kafka/data
     - ./jaas:/etc/kafka/jaas
     - ./clusterB:/etc/kafka/secrets
     - ./scripts/clusterB:/etc/kafka/scripts_init
   environment:
     KAFKA_BROKER_ID: 0
     KAFKA_ZOOKEEPER_CONNECT:  zookeeper-b:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_JMX_PORT: 9994
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9097
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-b-1:9092,SASL_SSL://kafka-b-1:9093,EXTERNAL://localhost:9097
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: creds_keystore
     KAFKA_SSL_KEY_CREDENTIALS: creds_keystore
     KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds_truststore
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net

 kafka-b-2:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-b-2
   hostname: kafka-b-2
   depends_on:
     -  zookeeper-b
   ports:
     - "9098:9098"
     - "9995:9995"
   volumes:
     - data-kafka-b-2:/var/lib/kafka/data
     - ./jaas:/etc/kafka/jaas
     - ./clusterB:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT:  zookeeper-b:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_JMX_PORT: 9995
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9098
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-b-2:9092,SASL_SSL://kafka-b-2:9093,EXTERNAL://localhost:9098
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: creds_keystore
     KAFKA_SSL_KEY_CREDENTIALS: creds_keystore
     KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds_truststore
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net

 kafka-b-3:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-b-3
   hostname: kafka-b-3
   depends_on:
     -  zookeeper-b
   ports:
     - "9099:9099"
     - "9996:9996"
   volumes:
     - data-kafka-b-3:/var/lib/kafka/data
     - ./jaas:/etc/kafka/jaas
     - ./clusterB:/etc/kafka/secrets
   environment:
     KAFKA_BROKER_ID: 2
     KAFKA_ZOOKEEPER_CONNECT:  zookeeper-b:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_JMX_PORT: 9996
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9099
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-b-3:9092,SASL_SSL://kafka-b-3:9093,EXTERNAL://localhost:9099
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:SASL_SSL
     KAFKA_LISTENER_SECURITY_PROTOCOL: SSL
     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
     KAFKA_MIN_INSYNC_REPLICAS: 2
     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SUPER_USERS: "User:admin"
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_jaas.conf"
     KAFKA_SSL_KEYSTORE_FILENAME: keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: creds_keystore
     KAFKA_SSL_KEY_CREDENTIALS: creds_keystore
     KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: creds_truststore
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
   networks:
     - kafka_net

 jmx-kafka-a-1:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   depends_on:
     - kafka-a-1
   environment:
     CONFIG_YML: "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./monitor/jmx_exporter/config_kafka_a_1.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-a-1
   networks:
     - kafka_net

 jmx-kafka-a-2:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   depends_on:
     - kafka-a-2
   environment:
     CONFIG_YML: "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./monitor/jmx_exporter/config_kafka_a_2.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-a-2
   networks:
     - kafka_net

 jmx-kafka-a-3:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   depends_on:
     - kafka-a-3
   environment:
     CONFIG_YML: "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./monitor/jmx_exporter/config_kafka_a_3.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-a-3
   networks:
     - kafka_net

 jmx-kafka-b-1:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   depends_on:
     - kafka-b-1
   environment:
     CONFIG_YML: "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./monitor/jmx_exporter/config_kafka_b_1.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-b-1
   networks:
     - kafka_net

 jmx-kafka-b-2:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   depends_on:
     - kafka-b-2
   environment:
     CONFIG_YML: "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./monitor/jmx_exporter/config_kafka_b_2.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-b-2
   networks:
     - kafka_net

 jmx-kafka-b-3:
   image: "sscaling/jmx-prometheus-exporter"
   restart: unless-stopped
   depends_on:
     - kafka-b-3
   environment:
     CONFIG_YML: "/etc/jmx_exporter/config.yml"
     JVM_OPTS: "-Xmx128M"
   volumes:
     - ./monitor/jmx_exporter/config_kafka_b_3.yml:/etc/jmx_exporter/config.yml
   container_name: jmx-kafka-b-3
   networks:
     - kafka_net

 prometheus:
   image: prom/prometheus:latest
   restart: unless-stopped
   volumes:
     - ./monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
     - ./monitor/prometheus/alert.rules:/etc/prometheus/alert.rules
   command: "--config.file=/etc/prometheus/prometheus.yml"
   container_name: prometheus
   networks:
     - kafka_net

 grafana:
   image: grafana/grafana:8.1.6
   restart: unless-stopped
   ports:
     - "3001:3000"
   environment:
     GF_PATHS_DATA: /var/lib/grafana
     GF_SECURITY_ADMIN_PASSWORD: kafka
   volumes:
     - ./monitor/grafana/provisioning:/etc/grafana/provisioning
     - ./monitor/grafana/dashboards:/var/lib/grafana/dashboards
   container_name: grafana
   depends_on:
     - prometheus
   networks:
     - kafka_net

 ui:
   image: provectuslabs/kafka-ui:v0.7.0
   ports:
     - "8080:8080"
   environment:
     KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-a-1:9093,kafka-a-2:9093,kafka-a-3:9093
     KAFKA_CLUSTERS_0_NAME: ClusterA
     KAFKA_CLUSTERS_0_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/truststore.jks"
     KAFKA_CLUSTERS_0_SSL_TRUSTSTORE_PASSWORD: "changeit"
     KAFKA_CLUSTERS_0_SASL_ENABLED: "true"
     KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: "SASL_SSL"
     KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
     KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"

     KAFKA_CLUSTERS_1_BOOTSTRAP_SERVERS: kafka-b-1:9093,kafka-b-2:9093,kafka-b-3:9093
     KAFKA_CLUSTERS_1_NAME: ClusterB
     KAFKA_CLUSTERS_1_SSL_TRUSTSTORE_LOCATION: "/var/private/ssl/truststore.jks"
     KAFKA_CLUSTERS_1_SSL_TRUSTSTORE_PASSWORD: "changeit"
     KAFKA_CLUSTERS_1_SASL_ENABLED: "true"
     KAFKA_CLUSTERS_1_PROPERTIES_SECURITY_PROTOCOL: "SASL_SSL"
     KAFKA_CLUSTERS_1_PROPERTIES_SASL_MECHANISM: PLAIN
     KAFKA_CLUSTERS_1_PROPERTIES_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"admin\" password=\"admin-secret\";"
   volumes:
     - ./kafkaui:/var/private/ssl/
   networks:
     - kafka_net

 schema-registry:
   image: confluentinc/cp-schema-registry:7.4.4
   hostname: schema-registry
   container_name: schema-registry
   depends_on:
     - kafka-a-1
     - kafka-a-2
     - kafka-a-3
     - kafka-b-1
     - kafka-b-2
     - kafka-b-3
   ports:
     - "8081:8081"
   environment:
     SCHEMA_REGISTRY_HOST_NAME: schema-registry
     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-a-1:9092,kafka-a-2:9092,kafka-a-3:9092'
     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
   networks:
     - kafka_net

 mm2:
   image: confluentinc/cp-kafka-connect:7.4.4
   container_name: mm2
   depends_on:
     - kafka-a-1
     - kafka-a-2
     - kafka-a-3
     - kafka-b-1
     - kafka-b-2
     - kafka-b-3
   environment:
     CONNECT_BOOTSTRAP_SERVERS: "kafka-a-1:9093,kafka-a-2:9093,kafka-a-3:9093"
     CONNECT_SECURITY_PROTOCOL: SASL_SSL
     CONNECT_SASL_MECHANISM: SCRAM-SHA-512
     CONNECT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="mm2" password="changeit";'
     CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secretsA/truststore.jks
     CONNECT_SSL_TRUSTSTORE_PASSWORD: changeit
     CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/secretsA/keystore.jks
     CONNECT_SSL_KEYSTORE_PASSWORD: changeit
     CONNECT_SSL_KEY_PASSWORD: changeit
     CONNECT_REST_PORT: 8083
     CONNECT_GROUP_ID: "mm2-connect"
     CONNECT_CONFIG_STORAGE_TOPIC: _mm2-configs
     CONNECT_OFFSET_STORAGE_TOPIC: _mm2-offsets
     CONNECT_STATUS_STORAGE_TOPIC: _mm2-status
     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
     CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
     CONNECT_PLUGIN_PATH: /usr/share/java
     KAFKA_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties"
   command: [ "bash","-lc","connect-mirror-maker /etc/kafka/mm2.properties" ]
   ports:
     - "9090:8083"
   volumes:
     - ./mirror/mm2.properties:/etc/kafka/mm2.properties:ro
     - ./clusterA:/etc/kafka/secretsA
     - ./clusterB:/etc/kafka/secretsB
   networks:
     - kafka_net

 connect:
   image: confluentinc/cp-kafka-connect:7.4.4
   container_name: connect-a
   depends_on:
     - kafka-a-1
     - kafka-a-2
     - kafka-a-3
   ports:
     - "9085:8083"
   environment:
     CONNECT_BOOTSTRAP_SERVERS: "kafka-a-1:9093,kafka-a-2:9093,kafka-a-3:9093"
     CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
     CONNECT_GROUP_ID: "connect-jdbc"
     CONNECT_CONFIG_STORAGE_TOPIC: "_connect-configs"
     CONNECT_OFFSET_STORAGE_TOPIC: "_connect-offsets"
     CONNECT_STATUS_STORAGE_TOPIC: "_connect-status"
     CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
     CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
     CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
     CONNECT_REST_PORT: 8083
     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/usr/share/kafka/plugins/connect-file"
     CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
     CONNECT_SECURITY_PROTOCOL: "SASL_SSL"
     CONNECT_SASL_MECHANISM: "PLAIN"
     CONNECT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="connect" password="changeit";'
     CONNECT_SSL_TRUSTSTORE_LOCATION: "/etc/kafka/secrets/truststore.jks"
     CONNECT_SSL_TRUSTSTORE_PASSWORD: "changeit"
#     CONNECT_SSL_KEYSTORE_LOCATION: "/etc/kafka/secrets/keystore.jks"
#     CONNECT_SSL_KEYSTORE_PASSWORD: "changeit"
#     CONNECT_SSL_KEY_PASSWORD: "changeit"
     CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
   volumes:
     - ./connect:/etc/kafka/secrets:ro
     - ./connect/data:/data
     - ./connect/plugins:/usr/share/kafka/plugins/connect-file:ro
   networks:
     - kafka_net

 postgres:
   image: postgres:16
   container_name: shop-postgres
   environment:
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: postgres
     POSTGRES_DB: shopdb
   ports:
     - "5432:5432"
   volumes:
     - ./pgdata:/var/lib/postgresql/data
   networks:
     - kafka_net

 hadoop-namenode:
   image: apache/hadoop:3.4.1
   container_name: hadoop-namenode
   hostname: hadoop-namenode
   user: "root"
   restart: always
   ports:
     - "9870:9870"
     - "9000:9000"
   volumes:
     - ./analitics/hadoop-config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./analitics/hadoop-config/hdfs-site-namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./analitics/namenode_entrypoint.sh:/namenode_entrypoint.sh
   entrypoint: [ "/bin/bash", "/namenode_entrypoint.sh" ]
   command: [ "hdfs", "namenode" ]
   networks:
     - kafka_net
 hadoop-datanode-1:
   image: apache/hadoop:3.4.1
   container_name: hadoop-datanode-1
   hostname: hadoop-datanode-1
   user: "root"
   restart: always
   depends_on: [ hadoop-namenode ]
   ports:
     - "9864:9864"
     - "9970:9970"
   volumes:
     - ./analitics/hadoop-config/core-site.xml:/opt/hadoop/etc/hadoop/core-site.xml
     - ./analitics/hadoop-config/hdfs-site-datanode-1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
     - ./analitics/datanode_entrypoint.sh:/datanode_entrypoint.sh
   entrypoint: [ "/bin/bash", "/datanode_entrypoint.sh" ]
   command: [ "hdfs", "datanode" ]
   networks:
     - kafka_net

 spark-master:
   image: bitnami/spark:3.5.4
   container_name: spark-master
   environment:
     - SPARK_MODE=master
     - SPARK_MASTER_HOST=spark-master
   ports:
     - "8050:8080"
     - "7077:7077"
   networks:
     - kafka_net

 spark-worker-1:
    image: bitnami/spark:3.5.4
    container_name: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - kafka_net

volumes:
  data-kafka-a-1:
  data-kafka-a-2:
  data-kafka-a-3:
  data-kafka-b-1:
  data-kafka-b-2:
  data-kafka-b-3:

networks:
  kafka_net:      
    name: my_net